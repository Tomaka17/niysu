var search_data = {
    'index': {
        'searchIndex': ["niysu","niysu\\adminsite","niysu\\filters","niysu\\services","niysu\\adminsite\\adminsite","niysu\\adminsite\\xdebugprofilingfilter","niysu\\filters\\csvresponsefilter","niysu\\filters\\contentencodingresponsefilter","niysu\\filters\\debugpanelresponsefilter","niysu\\filters\\etagresponsefilter","niysu\\filters\\errorpagesresponsefilter","niysu\\filters\\excelresponsefilter","niysu\\filters\\formanalyserresponsefilter","niysu\\filters\\formvalidatorrequestfilter","niysu\\filters\\jsonrequestfilter","niysu\\filters\\jsonresponsefilter","niysu\\filters\\maintenancemoderesponsefilter","niysu\\filters\\postrequestfilter","niysu\\filters\\plaintextresponsefilter","niysu\\filters\\servercacheresponsefilter","niysu\\filters\\statuscodeoverwriteresponsefilter","niysu\\filters\\tidyresponsefilter","niysu\\filters\\twigresponsefilter","niysu\\filters\\xmlrequestfilter","niysu\\filters\\xmlresponsefilter","niysu\\httprequestcustom","niysu\\httprequestfilterinterface","niysu\\httprequestglobal","niysu\\httprequestinterface","niysu\\httpresponsecustomfilter","niysu\\httpresponsefilterinterface","niysu\\httpresponseglobal","niysu\\httpresponseinterface","niysu\\httpresponsenull","niysu\\httpresponsestorage","niysu\\httpresponsestream","niysu\\route","niysu\\routescollection","niysu\\scope","niysu\\server","niysu\\services\\cacheservice","niysu\\services\\cookiesservice","niysu\\services\\databaseprofilingservice","niysu\\services\\databaseservice","niysu\\services\\databaseservicetable","niysu\\services\\formvalidationservice","niysu\\services\\httpbasicauthservice","niysu\\services\\maintenancemodeservice","niysu\\services\\resourcescacheservice","niysu\\services\\sessionauthservice","niysu\\services\\sessionservice","niysu\\services\\twigservice","niysu\\services\\xsltservice","niysu\\urlpattern","niysu\\adminsite\\adminsite::__construct","niysu\\adminsite\\adminsite::mainpanel","niysu\\adminsite\\adminsite::ajaxtestpanel","niysu\\adminsite\\adminsite::databasepanel","niysu\\adminsite\\adminsite::xhprofpanel","niysu\\adminsite\\adminsite::xhprofpost","niysu\\adminsite\\adminsite::xdebugpanel","niysu\\adminsite\\adminsite::xdebugstart","niysu\\adminsite\\xdebugprofilingfilter::__construct","niysu\\filters\\csvresponsefilter::__construct","niysu\\filters\\csvresponsefilter::tostring","niysu\\filters\\csvresponsefilter::addcsvrow","niysu\\filters\\csvresponsefilter::setcsvdata","niysu\\filters\\csvresponsefilter::appenddata","niysu\\filters\\csvresponsefilter::flush","niysu\\filters\\contentencodingresponsefilter::__construct","niysu\\filters\\contentencodingresponsefilter::appenddata","niysu\\filters\\contentencodingresponsefilter::flush","niysu\\filters\\contentencodingresponsefilter::setheader","niysu\\filters\\contentencodingresponsefilter::addheader","niysu\\filters\\contentencodingresponsefilter::removeheader","niysu\\filters\\debugpanelresponsefilter::__construct","niysu\\filters\\debugpanelresponsefilter::setheader","niysu\\filters\\debugpanelresponsefilter::addheader","niysu\\filters\\debugpanelresponsefilter::appenddata","niysu\\filters\\etagresponsefilter::__construct","niysu\\filters\\etagresponsefilter::setetag","niysu\\filters\\etagresponsefilter::flush","niysu\\filters\\etagresponsefilter::appenddata","niysu\\filters\\etagresponsefilter::setstatuscode","niysu\\filters\\errorpagesresponsefilter::__construct","niysu\\filters\\errorpagesresponsefilter::seterrorroute","niysu\\filters\\errorpagesresponsefilter::setstatuscode","niysu\\filters\\errorpagesresponsefilter::flush","niysu\\filters\\errorpagesresponsefilter::appenddata","niysu\\filters\\errorpagesresponsefilter::isheaderslistsent","niysu\\filters\\excelresponsefilter::__construct","niysu\\filters\\excelresponsefilter::setcellvalue","niysu\\filters\\excelresponsefilter::setcellstyle","niysu\\filters\\excelresponsefilter::flush","niysu\\filters\\excelresponsefilter::appenddata","niysu\\filters\\formanalyserresponsefilter::__construct","niysu\\filters\\formanalyserresponsefilter::flush","niysu\\filters\\formanalyserresponsefilter::addheader","niysu\\filters\\formanalyserresponsefilter::setheader","niysu\\filters\\formanalyserresponsefilter::appenddata","niysu\\filters\\formvalidatorrequestfilter::__construct","niysu\\filters\\formvalidatorrequestfilter::isvalid","niysu\\filters\\formvalidatorrequestfilter::hasbeenvalidated","niysu\\filters\\jsonrequestfilter::beforevalidateinput","niysu\\filters\\jsonrequestfilter::__construct","niysu\\filters\\jsonrequestfilter::__get","niysu\\filters\\jsonrequestfilter::__isset","niysu\\filters\\jsonrequestfilter::isjsoncontenttype","niysu\\filters\\jsonrequestfilter::isvalidjson","niysu\\filters\\jsonrequestfilter::getjsondata","niysu\\filters\\jsonresponsefilter::__construct","niysu\\filters\\jsonresponsefilter::setdata","niysu\\filters\\jsonresponsefilter::flush","niysu\\filters\\jsonresponsefilter::appenddata","niysu\\filters\\maintenancemoderesponsefilter::__construct","niysu\\filters\\maintenancemoderesponsefilter::setstatuscode","niysu\\filters\\maintenancemoderesponsefilter::setheader","niysu\\filters\\maintenancemoderesponsefilter::addheader","niysu\\filters\\maintenancemoderesponsefilter::removeheader","niysu\\filters\\maintenancemoderesponsefilter::appenddata","niysu\\filters\\maintenancemoderesponsefilter::isheaderslistsent","niysu\\filters\\postrequestfilter::__construct","niysu\\filters\\postrequestfilter::__get","niysu\\filters\\postrequestfilter::__isset","niysu\\filters\\postrequestfilter::ispostcontenttype","niysu\\filters\\postrequestfilter::isvalidpostdata","niysu\\filters\\postrequestfilter::getpostdata","niysu\\filters\\plaintextresponsefilter::__construct","niysu\\filters\\plaintextresponsefilter::settext","niysu\\filters\\plaintextresponsefilter::appenddata","niysu\\filters\\servercacheresponsefilter::__construct","niysu\\filters\\servercacheresponsefilter::setcacheduration","niysu\\filters\\servercacheresponsefilter::setwriteincache","niysu\\filters\\servercacheresponsefilter::flush","niysu\\filters\\servercacheresponsefilter::setstatuscode","niysu\\filters\\servercacheresponsefilter::addheader","niysu\\filters\\servercacheresponsefilter::setheader","niysu\\filters\\servercacheresponsefilter::removeheader","niysu\\filters\\servercacheresponsefilter::appenddata","niysu\\filters\\statuscodeoverwriteresponsefilter::__construct","niysu\\filters\\statuscodeoverwriteresponsefilter::setstatuscode","niysu\\filters\\tidyresponsefilter::__construct","niysu\\filters\\tidyresponsefilter::setconfiguration","niysu\\filters\\tidyresponsefilter::isheaderslistsent","niysu\\filters\\tidyresponsefilter::appenddata","niysu\\filters\\tidyresponsefilter::setheader","niysu\\filters\\tidyresponsefilter::addheader","niysu\\filters\\tidyresponsefilter::flush","niysu\\filters\\twigresponsefilter::__construct","niysu\\filters\\twigresponsefilter::flush","niysu\\filters\\twigresponsefilter::settemplate","niysu\\filters\\twigresponsefilter::setvariables","niysu\\filters\\twigresponsefilter::appenddata","niysu\\filters\\twigresponsefilter::isheaderslistsent","niysu\\filters\\xmlrequestfilter::__construct","niysu\\filters\\xmlrequestfilter::isxmlcontenttype","niysu\\filters\\xmlrequestfilter::isvalidxml","niysu\\filters\\xmlrequestfilter::getxmldata","niysu\\filters\\xmlresponsefilter::__construct","niysu\\filters\\xmlresponsefilter::setcontenttype","niysu\\filters\\xmlresponsefilter::setdata","niysu\\filters\\xmlresponsefilter::flush","niysu\\filters\\xmlresponsefilter::appenddata","niysu\\filters\\xmlresponsefilter::tostring","niysu\\httprequestcustom::__construct","niysu\\httprequestcustom::copyof","niysu\\httprequestcustom::geturl","niysu\\httprequestcustom::seturl","niysu\\httprequestcustom::getmethod","niysu\\httprequestcustom::setmethod","niysu\\httprequestcustom::getheader","niysu\\httprequestcustom::getheaderslist","niysu\\httprequestcustom::getrawdata","niysu\\httprequestcustom::setrawdata","niysu\\httprequestcustom::ishttps","niysu\\httprequestcustom::sethttps","niysu\\httprequestfilterinterface::__construct","niysu\\httprequestfilterinterface::geturl","niysu\\httprequestfilterinterface::getmethod","niysu\\httprequestfilterinterface::getheader","niysu\\httprequestfilterinterface::getheaderslist","niysu\\httprequestfilterinterface::getrawdata","niysu\\httprequestfilterinterface::ishttps","niysu\\httprequestglobal::geturl","niysu\\httprequestglobal::getmethod","niysu\\httprequestglobal::getheader","niysu\\httprequestglobal::getheaderslist","niysu\\httprequestglobal::getrawdata","niysu\\httprequestglobal::ishttps","niysu\\httprequestglobal::__construct","niysu\\httprequestinterface::geturl","niysu\\httprequestinterface::getmethod","niysu\\httprequestinterface::getheader","niysu\\httprequestinterface::getheaderslist","niysu\\httprequestinterface::getrawdata","niysu\\httprequestinterface::ishttps","niysu\\httprequestinterface::getcontenttypeheader","niysu\\httprequestinterface::ismethodgetorhead","niysu\\httprequestinterface::ismethodput","niysu\\httprequestinterface::ismethodpost","niysu\\httprequestinterface::ismethoddelete","niysu\\httprequestinterface::ismethodoptions","niysu\\httprequestinterface::ismethodtrace","niysu\\httprequestinterface::ismethodconnect","niysu\\httprequestinterface::ismethodpatch","niysu\\httprequestinterface::getpriorityformime","niysu\\httprequestinterface::getpriorityforlanguage","niysu\\httprequestinterface::getpriorityforencoding","niysu\\httprequestinterface::gethighestpriorityformime","niysu\\httprequestinterface::gethighestpriorityforlanguage","niysu\\httprequestinterface::gethighestpriorityforencoding","niysu\\httpresponsecustomfilter::__construct","niysu\\httpresponsecustomfilter::flush","niysu\\httpresponsecustomfilter::appenddata","niysu\\httpresponsecustomfilter::addheader","niysu\\httpresponsecustomfilter::setheader","niysu\\httpresponsecustomfilter::removeheader","niysu\\httpresponsecustomfilter::setstatuscode","niysu\\httpresponsecustomfilter::setcontentcallback","niysu\\httpresponsefilterinterface::__construct","niysu\\httpresponsefilterinterface::flush","niysu\\httpresponsefilterinterface::setstatuscode","niysu\\httpresponsefilterinterface::addheader","niysu\\httpresponsefilterinterface::setheader","niysu\\httpresponsefilterinterface::removeheader","niysu\\httpresponsefilterinterface::isheaderslistsent","niysu\\httpresponsefilterinterface::appenddata","niysu\\httpresponseglobal::__construct","niysu\\httpresponseglobal::__destruct","niysu\\httpresponseglobal::flush","niysu\\httpresponseglobal::setstatuscode","niysu\\httpresponseglobal::addheader","niysu\\httpresponseglobal::setheader","niysu\\httpresponseglobal::removeheader","niysu\\httpresponseglobal::isheaderslistsent","niysu\\httpresponseglobal::appenddata","niysu\\httpresponseinterface::setstatuscode","niysu\\httpresponseinterface::addheader","niysu\\httpresponseinterface::setheader","niysu\\httpresponseinterface::removeheader","niysu\\httpresponseinterface::isheaderslistsent","niysu\\httpresponseinterface::appenddata","niysu\\httpresponseinterface::flush","niysu\\httpresponseinterface::redirect","niysu\\httpresponseinterface::setcache","niysu\\httpresponseinterface::sethtmldata","niysu\\httpresponseinterface::setcsvdata","niysu\\httpresponseinterface::setjsondata","niysu\\httpresponseinterface::setxmldata","niysu\\httpresponseinterface::setplaintextdata","niysu\\httpresponsenull::flush","niysu\\httpresponsenull::setstatuscode","niysu\\httpresponsenull::addheader","niysu\\httpresponsenull::setheader","niysu\\httpresponsenull::removeheader","niysu\\httpresponsenull::isheaderslistsent","niysu\\httpresponsenull::appenddata","niysu\\httpresponsestorage::flush","niysu\\httpresponsestorage::getstatuscode","niysu\\httpresponsestorage::setstatuscode","niysu\\httpresponsestorage::hasheader","niysu\\httpresponsestorage::getheader","niysu\\httpresponsestorage::getheaderslist","niysu\\httpresponsestorage::addheader","niysu\\httpresponsestorage::setheader","niysu\\httpresponsestorage::removeheader","niysu\\httpresponsestorage::isheaderslistsent","niysu\\httpresponsestorage::getdata","niysu\\httpresponsestorage::setdata","niysu\\httpresponsestorage::appenddata","niysu\\httpresponsestream::build","niysu\\httpresponsestream::stream_open","niysu\\httpresponsestream::stream_write","niysu\\httpresponsestream::stream_close","niysu\\httpresponsestream::url_stat","niysu\\route::__construct","niysu\\route::getname","niysu\\route::name","niysu\\route::handle","niysu\\route::handlenourlcheck","niysu\\route::method","niysu\\route::pattern","niysu\\route::validate","niysu\\route::onlyif","niysu\\route::before","niysu\\route::handler","niysu\\route::after","niysu\\route::geturlscount","niysu\\route::geturlregex","niysu\\route::getoriginalpattern","niysu\\route::geturl","niysu\\route::convertonlyiftobefore","niysu\\route::convertvalidatetobefore","niysu\\route::convertfiltertobefore","niysu\\routescollection::parseclass","niysu\\routescollection::register","niysu\\routescollection::registerstaticdirectory","niysu\\routescollection::redirect","niysu\\routescollection::__construct","niysu\\routescollection::prefix","niysu\\routescollection::getlocalprefix","niysu\\routescollection::getfullprefix","niysu\\routescollection::before","niysu\\routescollection::getrouteslist","niysu\\routescollection::newchild","niysu\\routescollection::handle","niysu\\routescollection::getroutebyname","niysu\\routescollection::getbeforefunctions","niysu\\scope::__get","niysu\\scope::__set","niysu\\scope::__unset","niysu\\scope::__isset","niysu\\scope::has","niysu\\scope::get","niysu\\scope::getbyref","niysu\\scope::getbytype","niysu\\scope::getbytypebyref","niysu\\scope::set","niysu\\scope::callback","niysu\\scope::passbyref","niysu\\scope::call","niysu\\scope::newchild","niysu\\scope::newsmallchild","niysu\\scope::serialize","niysu\\scope::unserialize","niysu\\scope::__construct","niysu\\scope::__clone","niysu\\server::__construct","niysu\\server::getserviceprovider","niysu\\server::setserviceprovider","niysu\\server::getservice","niysu\\server::setfilterprovider","niysu\\server::register","niysu\\server::registerstaticdirectory","niysu\\server::redirect","niysu\\server::before","niysu\\server::buildcollection","niysu\\server::handle","niysu\\server::generatequeryscope","niysu\\server::getrouteslist","niysu\\server::parseclass","niysu\\server::getroutebyname","niysu\\services\\cacheservice::setcachedirectory","niysu\\services\\cacheservice::setcompressionlevel","niysu\\services\\cacheservice::activate","niysu\\services\\cacheservice::deactivate","niysu\\services\\cacheservice::exists","niysu\\services\\cacheservice::store","niysu\\services\\cacheservice::load","niysu\\services\\cacheservice::clear","niysu\\services\\cacheservice::clearall","niysu\\services\\cacheservice::__construct","niysu\\services\\cookiesservice::__construct","niysu\\services\\cookiesservice::setdefaultlifetime","niysu\\services\\cookiesservice::__get","niysu\\services\\cookiesservice::__set","niysu\\services\\cookiesservice::__unset","niysu\\services\\cookiesservice::__isset","niysu\\services\\cookiesservice::getcookieslist","niysu\\services\\cookiesservice::get","niysu\\services\\cookiesservice::destroy","niysu\\services\\cookiesservice::add","niysu\\services\\databaseprofilingservice::signalconnection","niysu\\services\\databaseprofilingservice::signalquery","niysu\\services\\databaseprofilingservice::getnumberofqueries","niysu\\services\\databaseprofilingservice::getqueriestotalmilliseconds","niysu\\services\\databaseprofilingservice::gettotalconnectionmilliseconds","niysu\\services\\databaseprofilingservice::getquerieslist","niysu\\services\\databaseservice::beforeconfiguredatabase","niysu\\services\\databaseservice::begintransaction","niysu\\services\\databaseservice::commit","niysu\\services\\databaseservice::rollback","niysu\\services\\databaseservice::openquery","niysu\\services\\databaseservice::query","niysu\\services\\databaseservice::querysingle","niysu\\services\\databaseservice::execute","niysu\\services\\databaseservice::getlastinsertid","niysu\\services\\databaseservice::__construct","niysu\\services\\databaseservice::setdatabase","niysu\\services\\databaseservice::__get","niysu\\services\\databaseservicetable::orderby","niysu\\services\\databaseservicetable::__construct","niysu\\services\\databaseservicetable::__get","niysu\\services\\databaseservicetable::__unset","niysu\\services\\databaseservicetable::__set","niysu\\services\\databaseservicetable::current","niysu\\services\\databaseservicetable::key","niysu\\services\\databaseservicetable::next","niysu\\services\\databaseservicetable::rewind","niysu\\services\\databaseservicetable::valid","niysu\\services\\databaseservicetable::offsetexists","niysu\\services\\databaseservicetable::offsetget","niysu\\services\\databaseservicetable::offsetset","niysu\\services\\databaseservicetable::offsetunset","niysu\\services\\databaseservicetable::count","niysu\\services\\formvalidationservice::validate","niysu\\services\\formvalidationservice::generateformatfromhtml","niysu\\services\\formvalidationservice::setcachedirectory","niysu\\services\\formvalidationservice::storeformat","niysu\\services\\formvalidationservice::loadformat","niysu\\services\\httpbasicauthservice::beforemustbeauthenticated","niysu\\services\\httpbasicauthservice::__construct","niysu\\services\\httpbasicauthservice::setauthfunction","niysu\\services\\httpbasicauthservice::login","niysu\\services\\maintenancemodeservice::beforecheckmaintenance","niysu\\services\\maintenancemodeservice::setfile","niysu\\services\\maintenancemodeservice::ismaintenancemode","niysu\\services\\maintenancemodeservice::setmaintenancemode","niysu\\services\\maintenancemodeservice::clearmaintenancemode","niysu\\services\\resourcescacheservice::setcachedirectory","niysu\\services\\resourcescacheservice::store","niysu\\services\\resourcescacheservice::load","niysu\\services\\resourcescacheservice::clear","niysu\\services\\resourcescacheservice::clearall","niysu\\services\\resourcescacheservice::__construct","niysu\\services\\sessionauthservice::beforemustbeauthenticated","niysu\\services\\sessionauthservice::__construct","niysu\\services\\sessionauthservice::login","niysu\\services\\sessionservice::beforesettocachefilesstorage","niysu\\services\\sessionservice::settocachefilesstorage","niysu\\services\\sessionservice::__isset","niysu\\services\\sessionservice::__unset","niysu\\services\\sessionservice::__get","niysu\\services\\sessionservice::__set","niysu\\services\\sessionservice::__construct","niysu\\services\\sessionservice::__destruct","niysu\\services\\sessionservice::getid","niysu\\services\\sessionservice::getvariables","niysu\\services\\twigservice::__construct","niysu\\services\\twigservice::setcachepath","niysu\\services\\twigservice::addpath","niysu\\services\\twigservice::prependpath","niysu\\services\\twigservice::addglobal","niysu\\services\\twigservice::render","niysu\\services\\twigservice::output","niysu\\services\\xsltservice::__construct","niysu\\services\\xsltservice::transform","niysu\\services\\xsltservice::output","niysu\\urlpattern::__construct","niysu\\urlpattern::testurl","niysu\\urlpattern::pattern","niysu\\urlpattern::getoriginalpattern","niysu\\urlpattern::geturlregex","niysu\\urlpattern::geturl"],
        'info': [["Niysu","","Niysu.html","","",3],["Niysu\\AdminSite","","Niysu\/AdminSite.html","","",3],["Niysu\\Filters","","Niysu\/Filters.html","","",3],["Niysu\\Services","","Niysu\/Services.html","","",3],["AdminSite","Niysu\\AdminSite","Niysu\/AdminSite\/AdminSite.html","","",1],["XDebugProfilingFilter","Niysu\\AdminSite","Niysu\/AdminSite\/XDebugProfilingFilter.html"," < HTTPResponseFilterInterface","Filter necessary to use xdebug profiling in the AdminSite.",1],["CSVResponseFilter","Niysu\\Filters","Niysu\/Filters\/CSVResponseFilter.html"," < HTTPResponseFilterInterface","Send CSV data to the response.",1],["ContentEncodingResponseFilter","Niysu\\Filters","Niysu\/Filters\/ContentEncodingResponseFilter.html"," < HTTPResponseFilterInterface","Handles content-encoding as request by the client.",1],["DebugPanelResponseFilter","Niysu\\Filters","Niysu\/Filters\/DebugPanelResponseFilter.html"," < HTTPResponseFilterInterface","This filter will add a debug panel to any HTML response.",1],["ETagResponseFilter","Niysu\\Filters","Niysu\/Filters\/ETagResponseFilter.html"," < HTTPResponseFilterInterface","Handles everything related to ETag.",1],["ErrorPagesResponseFilter","Niysu\\Filters","Niysu\/Filters\/ErrorPagesResponseFilter.html"," < HTTPResponseFilterInterface","Allows you to customize error pages.",1],["ExcelResponseFilter","Niysu\\Filters","Niysu\/Filters\/ExcelResponseFilter.html"," < HTTPResponseFilterInterface","Allows to easily send Excel documents to the response.",1],["FormAnalyserResponseFilter","Niysu\\Filters","Niysu\/Filters\/FormAnalyserResponseFilter.html"," < HTTPResponseFilterInterface","Automatically parses the output HTML and saves the",1],["FormValidatorRequestFilter","Niysu\\Filters","Niysu\/Filters\/FormValidatorRequestFilter.html"," < HTTPRequestFilterInterface","Allows to check whether the POST data matches the form",1],["JSONRequestFilter","Niysu\\Filters","Niysu\/Filters\/JSONRequestFilter.html"," < HTTPRequestFilterInterface","",1],["JSONResponseFilter","Niysu\\Filters","Niysu\/Filters\/JSONResponseFilter.html"," < HTTPResponseFilterInterface","Send CSV data to the response.",1],["MaintenanceModeResponseFilter","Niysu\\Filters","Niysu\/Filters\/MaintenanceModeResponseFilter.html"," < HTTPResponseFilterInterface","Automatically sends back an error page if the website",1],["POSTRequestFilter","Niysu\\Filters","Niysu\/Filters\/POSTRequestFilter.html"," < HTTPRequestFilterInterface","",1],["PlainTextResponseFilter","Niysu\\Filters","Niysu\/Filters\/PlainTextResponseFilter.html"," < HTTPResponseFilterInterface","Send plain text to the response.",1],["ServerCacheResponseFilter","Niysu\\Filters","Niysu\/Filters\/ServerCacheResponseFilter.html"," < HTTPResponseFilterInterface","Utility filter that uses the ResourcesCacheService.",1],["StatusCodeOverwriteResponseFilter","Niysu\\Filters","Niysu\/Filters\/StatusCodeOverwriteResponseFilter.html"," < HTTPResponseFilterInterface","Doesn't do anything except replace the status code",1],["TidyResponseFilter","Niysu\\Filters","Niysu\/Filters\/TidyResponseFilter.html"," < HTTPResponseFilterInterface","Calls tidy_repair_string() on the output if it is HTML",1],["TwigResponseFilter","Niysu\\Filters","Niysu\/Filters\/TwigResponseFilter.html"," < HTTPResponseFilterInterface","Generates an HTML page using TwigService and sends",1],["XMLRequestFilter","Niysu\\Filters","Niysu\/Filters\/XMLRequestFilter.html"," < HTTPRequestFilterInterface","",1],["XMLResponseFilter","Niysu\\Filters","Niysu\/Filters\/XMLResponseFilter.html"," < HTTPResponseFilterInterface","Send XML data to the response.",1],["HTTPRequestCustom","Niysu","Niysu\/HTTPRequestCustom.html"," < HTTPRequestInterface","Implementation of HTTPRequestInterface which allows",1],["HTTPRequestFilterInterface","Niysu","Niysu\/HTTPRequestFilterInterface.html"," < HTTPRequestInterface","Interface which allows to filter the input of an HTTPRequest.",1],["HTTPRequestGlobal","Niysu","Niysu\/HTTPRequestGlobal.html"," < HTTPRequestInterface","Implementation of HTTPRequestInterface which reads",1],["HTTPRequestInterface","Niysu","Niysu\/HTTPRequestInterface.html","","Interface which allows to read the infos about an HTTPRequest.",1],["HTTPResponseCustomFilter","Niysu","Niysu\/HTTPResponseCustomFilter.html"," < HTTPResponseFilterInterface","Implementation of HTTPResponseFilterInterface which",1],["HTTPResponseFilterInterface","Niysu","Niysu\/HTTPResponseFilterInterface.html"," < HTTPResponseInterface","Implementation of HTTPResponseInterface which acts",1],["HTTPResponseGlobal","Niysu","Niysu\/HTTPResponseGlobal.html"," < HTTPResponseInterface","Implementation of HTTPResponseInterface which will",1],["HTTPResponseInterface","Niysu","Niysu\/HTTPResponseInterface.html","","Interface for the response of an HTTP request",1],["HTTPResponseNull","Niysu","Niysu\/HTTPResponseNull.html"," < HTTPResponseInterface","Implementation of HTTPResponseInterface which doesn't",1],["HTTPResponseStorage","Niysu","Niysu\/HTTPResponseStorage.html"," < HTTPResponseInterface","Implementation of HTTPResponseInterface which will",1],["HTTPResponseStream","Niysu","Niysu\/HTTPResponseStream.html","","This class can build a PHP filename that will act as",1],["Route","Niysu","Niysu\/Route.html","","A route is a path that the server can follow in order",1],["RoutesCollection","Niysu","Niysu\/RoutesCollection.html","","",1],["Scope","Niysu","Niysu\/Scope.html","","Utility class for dependency injection (or whatever",1],["Server","Niysu","Niysu\/Server.html","","",1],["CacheService","Niysu\\Services","Niysu\/Services\/CacheService.html","","",1],["CookiesService","Niysu\\Services","Niysu\/Services\/CookiesService.html","","Reads and\/or writes cookies from the request or to",1],["DatabaseProfilingService","Niysu\\Services","Niysu\/Services\/DatabaseProfilingService.html","","",1],["DatabaseService","Niysu\\Services","Niysu\/Services\/DatabaseService.html","","",1],["DatabaseServiceTable","Niysu\\Services","Niysu\/Services\/DatabaseServiceTable.html","","",1],["FormValidationService","Niysu\\Services","Niysu\/Services\/FormValidationService.html","","Allows to check whether POST data is in the right format.",1],["HTTPBasicAuthService","Niysu\\Services","Niysu\/Services\/HTTPBasicAuthService.html","","",1],["MaintenanceModeService","Niysu\\Services","Niysu\/Services\/MaintenanceModeService.html","","This service allows to check whether a maintenance",1],["ResourcesCacheService","Niysu\\Services","Niysu\/Services\/ResourcesCacheService.html","","Service that manages server-side caching of resources.",1],["SessionAuthService","Niysu\\Services","Niysu\/Services\/SessionAuthService.html","","",1],["SessionService","Niysu\\Services","Niysu\/Services\/SessionService.html","","",1],["TwigService","Niysu\\Services","Niysu\/Services\/TwigService.html","","",1],["XSLTService","Niysu\\Services","Niysu\/Services\/XSLTService.html","","This class allows for easy XSLT transformations.",1],["URLPattern","Niysu","Niysu\/URLPattern.html","","Allows to build patterns for URLs and check if a URL",1],["AdminSite::__construct","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method___construct","($twigService, $response)","",2],["AdminSite::mainPanel","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method_mainPanel","($twigService, $server, $scope)","",2],["AdminSite::ajaxTestPanel","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method_ajaxTestPanel","($twigService)","",2],["AdminSite::databasePanel","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method_databasePanel","($twigService)","",2],["AdminSite::xhProfPanel","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method_xhProfPanel","($twigService)","",2],["AdminSite::xhProfPost","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method_xhProfPost","($twigService, $server, $postRequestFilter)","",2],["AdminSite::xDebugPanel","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method_xDebugPanel","($twigService, $response)","",2],["AdminSite::xDebugStart","Niysu\\AdminSite\\AdminSite","Niysu\/AdminSite\/AdminSite.html#method_xDebugStart","($postRequestFilter, $response)","",2],["XDebugProfilingFilter::__construct","Niysu\\AdminSite\\XDebugProfilingFilter","Niysu\/AdminSite\/XDebugProfilingFilter.html#method___construct","(<abbr title=\"Niysu\\AdminSite\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response)","If profiling is enabled, will send back a header containing",2],["CSVResponseFilter::__construct","Niysu\\Filters\\CSVResponseFilter","Niysu\/Filters\/CSVResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $next)","Sets the output response.",2],["CSVResponseFilter::toString","Niysu\\Filters\\CSVResponseFilter","Niysu\/Filters\/CSVResponseFilter.html#method_toString","(array $csv, string $separator = &#039;;&#039;)","Turns an 2D-array into a CSV string.",2],["CSVResponseFilter::addCSVRow","Niysu\\Filters\\CSVResponseFilter","Niysu\/Filters\/CSVResponseFilter.html#method_addCSVRow","($row, $separator = &#039;;&#039;)","Adds a row to the CSV data that will be answered.",2],["CSVResponseFilter::setCSVData","Niysu\\Filters\\CSVResponseFilter","Niysu\/Filters\/CSVResponseFilter.html#method_setCSVData","(array $csv, string $separator = &#039;;&#039;)","Sets the CSV data to send when the response is sent.",2],["CSVResponseFilter::appendData","Niysu\\Filters\\CSVResponseFilter","Niysu\/Filters\/CSVResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["CSVResponseFilter::flush","Niysu\\Filters\\CSVResponseFilter","Niysu\/Filters\/CSVResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["ContentEncodingResponseFilter::__construct","Niysu\\Filters\\ContentEncodingResponseFilter","Niysu\/Filters\/ContentEncodingResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $next, <abbr title=\"Niysu\\Filters\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request)","Sets the output response.",2],["ContentEncodingResponseFilter::appendData","Niysu\\Filters\\ContentEncodingResponseFilter","Niysu\/Filters\/ContentEncodingResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["ContentEncodingResponseFilter::flush","Niysu\\Filters\\ContentEncodingResponseFilter","Niysu\/Filters\/ContentEncodingResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["ContentEncodingResponseFilter::setHeader","Niysu\\Filters\\ContentEncodingResponseFilter","Niysu\/Filters\/ContentEncodingResponseFilter.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["ContentEncodingResponseFilter::addHeader","Niysu\\Filters\\ContentEncodingResponseFilter","Niysu\/Filters\/ContentEncodingResponseFilter.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["ContentEncodingResponseFilter::removeHeader","Niysu\\Filters\\ContentEncodingResponseFilter","Niysu\/Filters\/ContentEncodingResponseFilter.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["DebugPanelResponseFilter::__construct","Niysu\\Filters\\DebugPanelResponseFilter","Niysu\/Filters\/DebugPanelResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, $twigService, $scope, $databaseProfilingService)","Sets the output response.",2],["DebugPanelResponseFilter::setHeader","Niysu\\Filters\\DebugPanelResponseFilter","Niysu\/Filters\/DebugPanelResponseFilter.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["DebugPanelResponseFilter::addHeader","Niysu\\Filters\\DebugPanelResponseFilter","Niysu\/Filters\/DebugPanelResponseFilter.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["DebugPanelResponseFilter::appendData","Niysu\\Filters\\DebugPanelResponseFilter","Niysu\/Filters\/DebugPanelResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["ETagResponseFilter::__construct","Niysu\\Filters\\ETagResponseFilter","Niysu\/Filters\/ETagResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, <abbr title=\"Niysu\\Filters\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request, $stopRoute)","Sets the output response.",2],["ETagResponseFilter::setETag","Niysu\\Filters\\ETagResponseFilter","Niysu\/Filters\/ETagResponseFilter.html#method_setETag","(string $etag)","Sets the ETag of the resource.",2],["ETagResponseFilter::flush","Niysu\\Filters\\ETagResponseFilter","Niysu\/Filters\/ETagResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["ETagResponseFilter::appendData","Niysu\\Filters\\ETagResponseFilter","Niysu\/Filters\/ETagResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["ETagResponseFilter::setStatusCode","Niysu\\Filters\\ETagResponseFilter","Niysu\/Filters\/ETagResponseFilter.html#method_setStatusCode","($code)","Sets the status code to return with the headers.",2],["ErrorPagesResponseFilter::__construct","Niysu\\Filters\\ErrorPagesResponseFilter","Niysu\/Filters\/ErrorPagesResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, <abbr title=\"Niysu\\Filters\\Niysu\\Server\">Server<\/abbr> $server = null, <abbr title=\"Niysu\\Filters\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request, <abbr title=\"Niysu\\Filters\\Monolog\\Logger\">Logger<\/abbr> $log = null)","Sets the output response.",2],["ErrorPagesResponseFilter::setErrorRoute","Niysu\\Filters\\ErrorPagesResponseFilter","Niysu\/Filters\/ErrorPagesResponseFilter.html#method_setErrorRoute","(mixed $errorCode, string $routeName)","Sets the route to call as a replacement if a response",2],["ErrorPagesResponseFilter::setStatusCode","Niysu\\Filters\\ErrorPagesResponseFilter","Niysu\/Filters\/ErrorPagesResponseFilter.html#method_setStatusCode","(integer $statusCode)","Sets the status code to return with the headers.",2],["ErrorPagesResponseFilter::flush","Niysu\\Filters\\ErrorPagesResponseFilter","Niysu\/Filters\/ErrorPagesResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["ErrorPagesResponseFilter::appendData","Niysu\\Filters\\ErrorPagesResponseFilter","Niysu\/Filters\/ErrorPagesResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["ErrorPagesResponseFilter::isHeadersListSent","Niysu\\Filters\\ErrorPagesResponseFilter","Niysu\/Filters\/ErrorPagesResponseFilter.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["ExcelResponseFilter::__construct","Niysu\\Filters\\ExcelResponseFilter","Niysu\/Filters\/ExcelResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $next)","Sets the output response.",2],["ExcelResponseFilter::setCellValue","Niysu\\Filters\\ExcelResponseFilter","Niysu\/Filters\/ExcelResponseFilter.html#method_setCellValue","(string $cell, string $value, integer $sheet = null)","Changes the value inside a cell",2],["ExcelResponseFilter::setCellStyle","Niysu\\Filters\\ExcelResponseFilter","Niysu\/Filters\/ExcelResponseFilter.html#method_setCellStyle","(string $cell, array $style, integer $sheet = null)","Changes the style of a cell",2],["ExcelResponseFilter::flush","Niysu\\Filters\\ExcelResponseFilter","Niysu\/Filters\/ExcelResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["ExcelResponseFilter::appendData","Niysu\\Filters\\ExcelResponseFilter","Niysu\/Filters\/ExcelResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["FormAnalyserResponseFilter::__construct","Niysu\\Filters\\FormAnalyserResponseFilter","Niysu\/Filters\/FormAnalyserResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, <abbr title=\"Niysu\\Filters\\Niysu\\Services\\FormValidationService\">FormValidationService<\/abbr> $formValidationService)","Sets the output response.",2],["FormAnalyserResponseFilter::flush","Niysu\\Filters\\FormAnalyserResponseFilter","Niysu\/Filters\/FormAnalyserResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["FormAnalyserResponseFilter::addHeader","Niysu\\Filters\\FormAnalyserResponseFilter","Niysu\/Filters\/FormAnalyserResponseFilter.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["FormAnalyserResponseFilter::setHeader","Niysu\\Filters\\FormAnalyserResponseFilter","Niysu\/Filters\/FormAnalyserResponseFilter.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["FormAnalyserResponseFilter::appendData","Niysu\\Filters\\FormAnalyserResponseFilter","Niysu\/Filters\/FormAnalyserResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["FormValidatorRequestFilter::__construct","Niysu\\Filters\\FormValidatorRequestFilter","Niysu\/Filters\/FormValidatorRequestFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\Filters\\POSTRequestFilter\">POSTRequestFilter<\/abbr> $request, <abbr title=\"Niysu\\Filters\\Niysu\\Services\\FormValidationService\">FormValidationService<\/abbr> $formValidationService)","Sets the informations source of this filter.",2],["FormValidatorRequestFilter::isValid","Niysu\\Filters\\FormValidatorRequestFilter","Niysu\/Filters\/FormValidatorRequestFilter.html#method_isValid","()","Returns true if the data is valid according to the",2],["FormValidatorRequestFilter::hasBeenValidated","Niysu\\Filters\\FormValidatorRequestFilter","Niysu\/Filters\/FormValidatorRequestFilter.html#method_hasBeenValidated","()","Returns true if the filter did find a form format for",2],["JSONRequestFilter::beforeValidateInput","Niysu\\Filters\\JSONRequestFilter","Niysu\/Filters\/JSONRequestFilter.html#method_beforeValidateInput","(integer $errorStatusCode = 400)","Builds a before function that will check for JSON input.",2],["JSONRequestFilter::__construct","Niysu\\Filters\\JSONRequestFilter","Niysu\/Filters\/JSONRequestFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request)","Sets the informations source of this filter.",2],["JSONRequestFilter::__get","Niysu\\Filters\\JSONRequestFilter","Niysu\/Filters\/JSONRequestFilter.html#method___get","($varName)","",2],["JSONRequestFilter::__isset","Niysu\\Filters\\JSONRequestFilter","Niysu\/Filters\/JSONRequestFilter.html#method___isset","($varName)","",2],["JSONRequestFilter::isJSONContentType","Niysu\\Filters\\JSONRequestFilter","Niysu\/Filters\/JSONRequestFilter.html#method_isJSONContentType","()","",2],["JSONRequestFilter::isValidJSON","Niysu\\Filters\\JSONRequestFilter","Niysu\/Filters\/JSONRequestFilter.html#method_isValidJSON","()","",2],["JSONRequestFilter::getJSONData","Niysu\\Filters\\JSONRequestFilter","Niysu\/Filters\/JSONRequestFilter.html#method_getJSONData","()","",2],["JSONResponseFilter::__construct","Niysu\\Filters\\JSONResponseFilter","Niysu\/Filters\/JSONResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $next)","Sets the output response.",2],["JSONResponseFilter::setData","Niysu\\Filters\\JSONResponseFilter","Niysu\/Filters\/JSONResponseFilter.html#method_setData","(mixed $json)","Sets the JSON data to send when the response is sent.",2],["JSONResponseFilter::flush","Niysu\\Filters\\JSONResponseFilter","Niysu\/Filters\/JSONResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["JSONResponseFilter::appendData","Niysu\\Filters\\JSONResponseFilter","Niysu\/Filters\/JSONResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["MaintenanceModeResponseFilter::__construct","Niysu\\Filters\\MaintenanceModeResponseFilter","Niysu\/Filters\/MaintenanceModeResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, $maintenanceModeService, $stopRoute)","Sets the output response.",2],["MaintenanceModeResponseFilter::setStatusCode","Niysu\\Filters\\MaintenanceModeResponseFilter","Niysu\/Filters\/MaintenanceModeResponseFilter.html#method_setStatusCode","($code)","Sets the status code to return with the headers.",2],["MaintenanceModeResponseFilter::setHeader","Niysu\\Filters\\MaintenanceModeResponseFilter","Niysu\/Filters\/MaintenanceModeResponseFilter.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["MaintenanceModeResponseFilter::addHeader","Niysu\\Filters\\MaintenanceModeResponseFilter","Niysu\/Filters\/MaintenanceModeResponseFilter.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["MaintenanceModeResponseFilter::removeHeader","Niysu\\Filters\\MaintenanceModeResponseFilter","Niysu\/Filters\/MaintenanceModeResponseFilter.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["MaintenanceModeResponseFilter::appendData","Niysu\\Filters\\MaintenanceModeResponseFilter","Niysu\/Filters\/MaintenanceModeResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["MaintenanceModeResponseFilter::isHeadersListSent","Niysu\\Filters\\MaintenanceModeResponseFilter","Niysu\/Filters\/MaintenanceModeResponseFilter.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["POSTRequestFilter::__construct","Niysu\\Filters\\POSTRequestFilter","Niysu\/Filters\/POSTRequestFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request)","Sets the informations source of this filter.",2],["POSTRequestFilter::__get","Niysu\\Filters\\POSTRequestFilter","Niysu\/Filters\/POSTRequestFilter.html#method___get","($varName)","",2],["POSTRequestFilter::__isset","Niysu\\Filters\\POSTRequestFilter","Niysu\/Filters\/POSTRequestFilter.html#method___isset","($varName)","",2],["POSTRequestFilter::isPOSTContentType","Niysu\\Filters\\POSTRequestFilter","Niysu\/Filters\/POSTRequestFilter.html#method_isPOSTContentType","()","",2],["POSTRequestFilter::isValidPOSTData","Niysu\\Filters\\POSTRequestFilter","Niysu\/Filters\/POSTRequestFilter.html#method_isValidPOSTData","()","",2],["POSTRequestFilter::getPOSTData","Niysu\\Filters\\POSTRequestFilter","Niysu\/Filters\/POSTRequestFilter.html#method_getPOSTData","()","",2],["PlainTextResponseFilter::__construct","Niysu\\Filters\\PlainTextResponseFilter","Niysu\/Filters\/PlainTextResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $next)","Sets the output response.",2],["PlainTextResponseFilter::setText","Niysu\\Filters\\PlainTextResponseFilter","Niysu\/Filters\/PlainTextResponseFilter.html#method_setText","(string $text)","Sets the text to send.",2],["PlainTextResponseFilter::appendData","Niysu\\Filters\\PlainTextResponseFilter","Niysu\/Filters\/PlainTextResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["ServerCacheResponseFilter::__construct","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request, <abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, $resourcesCacheService, $stopRoute, <abbr title=\"Niysu\\Filters\\Monolog\\Logger\">Logger<\/abbr> $log = null)","Constructor.",2],["ServerCacheResponseFilter::setCacheDuration","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_setCacheDuration","(integer $seconds)","Sets the duration of the cache entry to be written.",2],["ServerCacheResponseFilter::setWriteInCache","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_setWriteInCache","(boolean $write)","Sets whether an entry will be written in cache.",2],["ServerCacheResponseFilter::flush","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["ServerCacheResponseFilter::setStatusCode","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_setStatusCode","($code)","Sets the status code to return with the headers.",2],["ServerCacheResponseFilter::addHeader","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["ServerCacheResponseFilter::setHeader","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["ServerCacheResponseFilter::removeHeader","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["ServerCacheResponseFilter::appendData","Niysu\\Filters\\ServerCacheResponseFilter","Niysu\/Filters\/ServerCacheResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["StatusCodeOverwriteResponseFilter::__construct","Niysu\\Filters\\StatusCodeOverwriteResponseFilter","Niysu\/Filters\/StatusCodeOverwriteResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, $code)","Sets the output response.",2],["StatusCodeOverwriteResponseFilter::setStatusCode","Niysu\\Filters\\StatusCodeOverwriteResponseFilter","Niysu\/Filters\/StatusCodeOverwriteResponseFilter.html#method_setStatusCode","(integer $statusCode)","Sets the status code to return with the headers.",2],["TidyResponseFilter::__construct","Niysu\\Filters\\TidyResponseFilter","Niysu\/Filters\/TidyResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $next)","Sets the output response.",2],["TidyResponseFilter::setConfiguration","Niysu\\Filters\\TidyResponseFilter","Niysu\/Filters\/TidyResponseFilter.html#method_setConfiguration","(mixed $config)","Sets the configuration to use when calling tidy_repair_string()",2],["TidyResponseFilter::isHeadersListSent","Niysu\\Filters\\TidyResponseFilter","Niysu\/Filters\/TidyResponseFilter.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["TidyResponseFilter::appendData","Niysu\\Filters\\TidyResponseFilter","Niysu\/Filters\/TidyResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["TidyResponseFilter::setHeader","Niysu\\Filters\\TidyResponseFilter","Niysu\/Filters\/TidyResponseFilter.html#method_setHeader","(string $header, $data)","Removes all headers of this name and adds a new one.",2],["TidyResponseFilter::addHeader","Niysu\\Filters\\TidyResponseFilter","Niysu\/Filters\/TidyResponseFilter.html#method_addHeader","(string $header, $data)","Adds a header to the headers list.",2],["TidyResponseFilter::flush","Niysu\\Filters\\TidyResponseFilter","Niysu\/Filters\/TidyResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["TwigResponseFilter::__construct","Niysu\\Filters\\TwigResponseFilter","Niysu\/Filters\/TwigResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, <abbr title=\"Niysu\\Filters\\Niysu\\Services\\TwigService\">TwigService<\/abbr> $twigService)","Sets the output response.",2],["TwigResponseFilter::flush","Niysu\\Filters\\TwigResponseFilter","Niysu\/Filters\/TwigResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["TwigResponseFilter::setTemplate","Niysu\\Filters\\TwigResponseFilter","Niysu\/Filters\/TwigResponseFilter.html#method_setTemplate","(string $template)","Sets the template that will be used when rendering.",2],["TwigResponseFilter::setVariables","Niysu\\Filters\\TwigResponseFilter","Niysu\/Filters\/TwigResponseFilter.html#method_setVariables","(array $variables)","Sets the array of variables that will be used when",2],["TwigResponseFilter::appendData","Niysu\\Filters\\TwigResponseFilter","Niysu\/Filters\/TwigResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["TwigResponseFilter::isHeadersListSent","Niysu\\Filters\\TwigResponseFilter","Niysu\/Filters\/TwigResponseFilter.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["XMLRequestFilter::__construct","Niysu\\Filters\\XMLRequestFilter","Niysu\/Filters\/XMLRequestFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request)","Sets the informations source of this filter.",2],["XMLRequestFilter::isXMLContentType","Niysu\\Filters\\XMLRequestFilter","Niysu\/Filters\/XMLRequestFilter.html#method_isXMLContentType","()","",2],["XMLRequestFilter::isValidXML","Niysu\\Filters\\XMLRequestFilter","Niysu\/Filters\/XMLRequestFilter.html#method_isValidXML","()","",2],["XMLRequestFilter::getXMLData","Niysu\\Filters\\XMLRequestFilter","Niysu\/Filters\/XMLRequestFilter.html#method_getXMLData","()","",2],["XMLResponseFilter::__construct","Niysu\\Filters\\XMLResponseFilter","Niysu\/Filters\/XMLResponseFilter.html#method___construct","(<abbr title=\"Niysu\\Filters\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $next)","Sets the output response.",2],["XMLResponseFilter::setContentType","Niysu\\Filters\\XMLResponseFilter","Niysu\/Filters\/XMLResponseFilter.html#method_setContentType","($contentType)","",2],["XMLResponseFilter::setData","Niysu\\Filters\\XMLResponseFilter","Niysu\/Filters\/XMLResponseFilter.html#method_setData","(mixed $xml)","Sets the XML data to send when the response is sent.",2],["XMLResponseFilter::flush","Niysu\\Filters\\XMLResponseFilter","Niysu\/Filters\/XMLResponseFilter.html#method_flush","()","Flushes the response at the end.",2],["XMLResponseFilter::appendData","Niysu\\Filters\\XMLResponseFilter","Niysu\/Filters\/XMLResponseFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["XMLResponseFilter::toString","Niysu\\Filters\\XMLResponseFilter","Niysu\/Filters\/XMLResponseFilter.html#method_toString","($xml)","Turns anything that can represent XML into a string.",2],["HTTPRequestCustom::__construct","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method___construct","($url, $method = &#039;GET&#039;, $headers = array(), $rawData = null, $https = false)","",2],["HTTPRequestCustom::copyOf","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_copyOf","(<a href=\"Niysu\/HTTPRequestInterface.html\"><abbr title=\"Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr><\/a> $source)","Builds a copy of another HTTPRequestInterface.",2],["HTTPRequestCustom::getURL","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_getURL","()","Returns the URL requested by the query, like: \/users\/5-john-doe",2],["HTTPRequestCustom::setURL","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_setURL","(string $url)","Sets the URL of the request.",2],["HTTPRequestCustom::getMethod","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_getMethod","()","Returns the method of the request: GET, POST, PUT,",2],["HTTPRequestCustom::setMethod","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_setMethod","(string $method)","Sets the method of the request.",2],["HTTPRequestCustom::getHeader","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_getHeader","(string $header, integer $index)","Returns the value of this header.",2],["HTTPRequestCustom::getHeadersList","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_getHeadersList","()","Returns an associative array of header => value",2],["HTTPRequestCustom::getRawData","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_getRawData","()","Returns the raw data given with the query.",2],["HTTPRequestCustom::setRawData","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_setRawData","(string $data)","Sets the data of the request.",2],["HTTPRequestCustom::isHTTPS","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_isHTTPS","()","Returns true if the request is made through HTTPS.",2],["HTTPRequestCustom::setHTTPS","Niysu\\HTTPRequestCustom","Niysu\/HTTPRequestCustom.html#method_setHTTPS","(boolean $https)","Sets whether the request has been made through HTTPS.",2],["HTTPRequestFilterInterface::__construct","Niysu\\HTTPRequestFilterInterface","Niysu\/HTTPRequestFilterInterface.html#method___construct","(<a href=\"Niysu\/HTTPRequestInterface.html\"><abbr title=\"Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr><\/a> $source)","Sets the informations source of this filter.",2],["HTTPRequestFilterInterface::getURL","Niysu\\HTTPRequestFilterInterface","Niysu\/HTTPRequestFilterInterface.html#method_getURL","()","Returns the URL requested by the query, like: \/users\/5-john-doe",2],["HTTPRequestFilterInterface::getMethod","Niysu\\HTTPRequestFilterInterface","Niysu\/HTTPRequestFilterInterface.html#method_getMethod","()","Returns the method of the request: GET, POST, PUT,",2],["HTTPRequestFilterInterface::getHeader","Niysu\\HTTPRequestFilterInterface","Niysu\/HTTPRequestFilterInterface.html#method_getHeader","(string $header, integer $index)","Returns the value of this header.",2],["HTTPRequestFilterInterface::getHeadersList","Niysu\\HTTPRequestFilterInterface","Niysu\/HTTPRequestFilterInterface.html#method_getHeadersList","()","Returns an associative array of header => value",2],["HTTPRequestFilterInterface::getRawData","Niysu\\HTTPRequestFilterInterface","Niysu\/HTTPRequestFilterInterface.html#method_getRawData","()","Returns the raw data given with the query.",2],["HTTPRequestFilterInterface::isHTTPS","Niysu\\HTTPRequestFilterInterface","Niysu\/HTTPRequestFilterInterface.html#method_isHTTPS","()","Returns true if the request is made through HTTPS.",2],["HTTPRequestGlobal::getURL","Niysu\\HTTPRequestGlobal","Niysu\/HTTPRequestGlobal.html#method_getURL","()","Returns the URL requested by the query, like: \/users\/5-john-doe",2],["HTTPRequestGlobal::getMethod","Niysu\\HTTPRequestGlobal","Niysu\/HTTPRequestGlobal.html#method_getMethod","()","Returns the method of the request: GET, POST, PUT,",2],["HTTPRequestGlobal::getHeader","Niysu\\HTTPRequestGlobal","Niysu\/HTTPRequestGlobal.html#method_getHeader","(string $header, integer $index)","Returns the value of this header.",2],["HTTPRequestGlobal::getHeadersList","Niysu\\HTTPRequestGlobal","Niysu\/HTTPRequestGlobal.html#method_getHeadersList","()","Returns an associative array of header => value",2],["HTTPRequestGlobal::getRawData","Niysu\\HTTPRequestGlobal","Niysu\/HTTPRequestGlobal.html#method_getRawData","()","Returns the raw data given with the query.",2],["HTTPRequestGlobal::isHTTPS","Niysu\\HTTPRequestGlobal","Niysu\/HTTPRequestGlobal.html#method_isHTTPS","()","Returns true if the request is made through HTTPS.",2],["HTTPRequestGlobal::__construct","Niysu\\HTTPRequestGlobal","Niysu\/HTTPRequestGlobal.html#method___construct","()","",2],["HTTPRequestInterface::getURL","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getURL","()","Returns the URL requested by the query, like: \/users\/5-john-doe",2],["HTTPRequestInterface::getMethod","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getMethod","()","Returns the method of the request: GET, POST, PUT,",2],["HTTPRequestInterface::getHeader","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getHeader","(string $header, integer $index)","Returns the value of this header.",2],["HTTPRequestInterface::getHeadersList","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getHeadersList","()","Returns an associative array of header => value",2],["HTTPRequestInterface::getRawData","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getRawData","()","Returns the raw data given with the query.",2],["HTTPRequestInterface::isHTTPS","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isHTTPS","()","Returns true if the request is made through HTTPS.",2],["HTTPRequestInterface::getContentTypeHeader","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getContentTypeHeader","()","Returns the value of the Content-Type header, or 'application\/octet-stream'",2],["HTTPRequestInterface::isMethodGETOrHEAD","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodGETOrHEAD","()","Returns true if the method is either GET or HEAD",2],["HTTPRequestInterface::isMethodPUT","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodPUT","()","Returns true if the method is PUT",2],["HTTPRequestInterface::isMethodPOST","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodPOST","()","Returns true if the method is POST",2],["HTTPRequestInterface::isMethodDELETE","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodDELETE","()","Returns true if the method is DELETE",2],["HTTPRequestInterface::isMethodOPTIONS","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodOPTIONS","()","Returns true if the method is OPTIONS",2],["HTTPRequestInterface::isMethodTRACE","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodTRACE","()","Returns true if the method is TRACE",2],["HTTPRequestInterface::isMethodCONNECT","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodCONNECT","()","Returns true if the method is CONNECTION",2],["HTTPRequestInterface::isMethodPATCH","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_isMethodPATCH","()","Returns true if the method is PATCH",2],["HTTPRequestInterface::getPriorityForMIME","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getPriorityForMIME","(string $myMime)","Reads the Accept header and gets the priority of a",2],["HTTPRequestInterface::getPriorityForLanguage","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getPriorityForLanguage","(string $myLanguage)","Reads the Accept-Language header and gets the priority",2],["HTTPRequestInterface::getPriorityForEncoding","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getPriorityForEncoding","(string $myEncoding)","Reads the Accept-Encoding header and gets the priority",2],["HTTPRequestInterface::getHighestPriorityForMIME","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getHighestPriorityForMIME","()","",2],["HTTPRequestInterface::getHighestPriorityForLanguage","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getHighestPriorityForLanguage","()","",2],["HTTPRequestInterface::getHighestPriorityForEncoding","Niysu\\HTTPRequestInterface","Niysu\/HTTPRequestInterface.html#method_getHighestPriorityForEncoding","()","",2],["HTTPResponseCustomFilter::__construct","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method___construct","(<a href=\"Niysu\/HTTPResponseInterface.html\"><abbr title=\"Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr><\/a> $output, <abbr title=\"Niysu\\callable\">callable<\/abbr> $contentCallback)","",2],["HTTPResponseCustomFilter::flush","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method_flush","()","Calls the callback defined in the constructor and flushes.",2],["HTTPResponseCustomFilter::appendData","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["HTTPResponseCustomFilter::addHeader","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["HTTPResponseCustomFilter::setHeader","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["HTTPResponseCustomFilter::removeHeader","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["HTTPResponseCustomFilter::setStatusCode","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method_setStatusCode","($code)","Sets the status code to return with the headers.",2],["HTTPResponseCustomFilter::setContentCallback","Niysu\\HTTPResponseCustomFilter","Niysu\/HTTPResponseCustomFilter.html#method_setContentCallback","(<abbr title=\"Niysu\\callable\">callable<\/abbr> $contentCallback)","Changes the content callback.",2],["HTTPResponseFilterInterface::__construct","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method___construct","(<a href=\"Niysu\/HTTPResponseInterface.html\"><abbr title=\"Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr><\/a> $output)","Sets the output response.",2],["HTTPResponseFilterInterface::flush","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method_flush","()","Flushes the response at the end.",2],["HTTPResponseFilterInterface::setStatusCode","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method_setStatusCode","(integer $statusCode)","Sets the status code to return with the headers.",2],["HTTPResponseFilterInterface::addHeader","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["HTTPResponseFilterInterface::setHeader","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["HTTPResponseFilterInterface::removeHeader","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["HTTPResponseFilterInterface::isHeadersListSent","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["HTTPResponseFilterInterface::appendData","Niysu\\HTTPResponseFilterInterface","Niysu\/HTTPResponseFilterInterface.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["HTTPResponseGlobal::__construct","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method___construct","()","",2],["HTTPResponseGlobal::__destruct","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method___destruct","()","",2],["HTTPResponseGlobal::flush","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method_flush","()","Calls the PHP function flush()",2],["HTTPResponseGlobal::setStatusCode","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method_setStatusCode","(integer $statusCode)","Sets the status code to return with the headers.",2],["HTTPResponseGlobal::addHeader","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["HTTPResponseGlobal::setHeader","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["HTTPResponseGlobal::removeHeader","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["HTTPResponseGlobal::isHeadersListSent","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["HTTPResponseGlobal::appendData","Niysu\\HTTPResponseGlobal","Niysu\/HTTPResponseGlobal.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["HTTPResponseInterface::setStatusCode","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setStatusCode","(integer $statusCode)","Sets the status code to return with the headers.",2],["HTTPResponseInterface::addHeader","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["HTTPResponseInterface::setHeader","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["HTTPResponseInterface::removeHeader","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["HTTPResponseInterface::isHeadersListSent","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["HTTPResponseInterface::appendData","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["HTTPResponseInterface::flush","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_flush","()","Flushes the response at the end.",2],["HTTPResponseInterface::redirect","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_redirect","($target, $statusCode = 302)","Deprecated.",2],["HTTPResponseInterface::setCache","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setCache","($value)","Deprecated.",2],["HTTPResponseInterface::setHTMLData","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setHTMLData","($data)","Deprecated.",2],["HTTPResponseInterface::setCSVData","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setCSVData","($data)","Deprecated.",2],["HTTPResponseInterface::setJSONData","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setJSONData","($data)","Deprecated.",2],["HTTPResponseInterface::setXMLData","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setXMLData","($data)","Deprecated.",2],["HTTPResponseInterface::setPlainTextData","Niysu\\HTTPResponseInterface","Niysu\/HTTPResponseInterface.html#method_setPlainTextData","($data)","Deprecated.",2],["HTTPResponseNull::flush","Niysu\\HTTPResponseNull","Niysu\/HTTPResponseNull.html#method_flush","()","Flushes the response at the end.",2],["HTTPResponseNull::setStatusCode","Niysu\\HTTPResponseNull","Niysu\/HTTPResponseNull.html#method_setStatusCode","(integer $statusCode)","Sets the status code to return with the headers.",2],["HTTPResponseNull::addHeader","Niysu\\HTTPResponseNull","Niysu\/HTTPResponseNull.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["HTTPResponseNull::setHeader","Niysu\\HTTPResponseNull","Niysu\/HTTPResponseNull.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["HTTPResponseNull::removeHeader","Niysu\\HTTPResponseNull","Niysu\/HTTPResponseNull.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["HTTPResponseNull::isHeadersListSent","Niysu\\HTTPResponseNull","Niysu\/HTTPResponseNull.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["HTTPResponseNull::appendData","Niysu\\HTTPResponseNull","Niysu\/HTTPResponseNull.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["HTTPResponseStorage::flush","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_flush","()","Flushes the response at the end.",2],["HTTPResponseStorage::getStatusCode","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_getStatusCode","()","Returns the status code previously set using setStatusCode",2],["HTTPResponseStorage::setStatusCode","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_setStatusCode","(integer $statusCode)","Sets the status code to return with the headers.",2],["HTTPResponseStorage::hasHeader","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_hasHeader","(string $header)","Returns true if the header has been defined.",2],["HTTPResponseStorage::getHeader","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_getHeader","(string $header)","Returns the value of the header.",2],["HTTPResponseStorage::getHeadersList","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_getHeadersList","()","Returns an associative array of all headers.",2],["HTTPResponseStorage::addHeader","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_addHeader","(string $header, string $value)","Adds a header to the headers list.",2],["HTTPResponseStorage::setHeader","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_setHeader","(string $header, string $value)","Removes all headers of this name and adds a new one.",2],["HTTPResponseStorage::removeHeader","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_removeHeader","(string $header)","Removes all headers with this name.",2],["HTTPResponseStorage::isHeadersListSent","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_isHeadersListSent","()","Returns true if the response has already sent its headers",2],["HTTPResponseStorage::getData","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_getData","()","Returns all data that has been appended.",2],["HTTPResponseStorage::setData","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_setData","(string $data)","Removes all data and replaces it by this data.",2],["HTTPResponseStorage::appendData","Niysu\\HTTPResponseStorage","Niysu\/HTTPResponseStorage.html#method_appendData","(string $data)","Appends data to the end of the response.",2],["HTTPResponseStream::build","Niysu\\HTTPResponseStream","Niysu\/HTTPResponseStream.html#method_build","(<a href=\"Niysu\/HTTPResponseInterface.html\"><abbr title=\"Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr><\/a> $response, boolean $writeHeaders = false)","Returns a SplFileObject that will write in this response.",2],["HTTPResponseStream::stream_open","Niysu\\HTTPResponseStream","Niysu\/HTTPResponseStream.html#method_stream_open","($path, $mode, $options, $opened_path)","",2],["HTTPResponseStream::stream_write","Niysu\\HTTPResponseStream","Niysu\/HTTPResponseStream.html#method_stream_write","($data)","",2],["HTTPResponseStream::stream_close","Niysu\\HTTPResponseStream","Niysu\/HTTPResponseStream.html#method_stream_close","()","",2],["HTTPResponseStream::url_stat","Niysu\\HTTPResponseStream","Niysu\/HTTPResponseStream.html#method_url_stat","($path, $flags)","",2],["Route::__construct","Niysu\\Route","Niysu\/Route.html#method___construct","($url = null, $method = &#039;.*&#039;, $callback = null)","Creates a new route.",2],["Route::getName","Niysu\\Route","Niysu\/Route.html#method_getName","()","Returns the name of the route.",2],["Route::name","Niysu\\Route","Niysu\/Route.html#method_name","(string $name)","Sets the name of the route.",2],["Route::handle","Niysu\\Route","Niysu\/Route.html#method_handle","(<a href=\"Niysu\/HTTPRequestInterface.html\"><abbr title=\"Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr><\/a> $request, <a href=\"Niysu\/HTTPResponseInterface.html\"><abbr title=\"Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr><\/a> $response, <a href=\"Niysu\/Scope.html\"><abbr title=\"Niysu\\Scope\">Scope<\/abbr><\/a> $scope = null, $prefix = &#039;&#039;)","Tries to handle an HTTP request through this route.",2],["Route::handleNoURLCheck","Niysu\\Route","Niysu\/Route.html#method_handleNoURLCheck","(<a href=\"Niysu\/HTTPRequestInterface.html\"><abbr title=\"Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr><\/a> $request, <a href=\"Niysu\/HTTPResponseInterface.html\"><abbr title=\"Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr><\/a> $response, <a href=\"Niysu\/Scope.html\"><abbr title=\"Niysu\\Scope\">Scope<\/abbr><\/a> $scope = null, $prefix = &#039;&#039;)","Same as handle() but continues even if wrong URL or",2],["Route::method","Niysu\\Route","Niysu\/Route.html#method_method","(string $method)","Changes the regex pattern that the method must match.",2],["Route::pattern","Niysu\\Route","Niysu\/Route.html#method_pattern","(string $varName, string $regex)","Changes the regex pattern that a route parameter must",2],["Route::validate","Niysu\\Route","Niysu\/Route.html#method_validate","(<abbr title=\"Niysu\\callable\">callable<\/abbr> $callable, integer $statusCode = 500)","Adds a function to be called before the handler and",2],["Route::onlyIf","Niysu\\Route","Niysu\/Route.html#method_onlyIf","(<abbr title=\"Niysu\\callable\">callable<\/abbr> $callable)","Adds a function to be called before the handler and",2],["Route::before","Niysu\\Route","Niysu\/Route.html#method_before","($callable)","Adds a function to be called before the handler.",2],["Route::handler","Niysu\\Route","Niysu\/Route.html#method_handler","(<abbr title=\"Niysu\\callable\">callable<\/abbr> $handler)","Sets the handling function who is in charge of building",2],["Route::after","Niysu\\Route","Niysu\/Route.html#method_after","($callable)","Adds a function to be called after the handler.",2],["Route::getURLsCount","Niysu\\Route","Niysu\/Route.html#method_getURLsCount","()","Returns the number of URLs registered to this service",2],["Route::getURLRegex","Niysu\\Route","Niysu\/Route.html#method_getURLRegex","(integer $index)","Returns the regular expression to match with an URL.",2],["Route::getOriginalPattern","Niysu\\Route","Niysu\/Route.html#method_getOriginalPattern","(integer $index)","Returns the original pattern of an URL.",2],["Route::getURL","Niysu\\Route","Niysu\/Route.html#method_getURL","(array $parameters = array(), integer $index)","Returns the URL of the route.",2],["Route::convertOnlyIfToBefore","Niysu\\Route","Niysu\/Route.html#method_convertOnlyIfToBefore","(mixed $onlyIf)","Converts a \"onlyIf\"-type function to a \"before\"-type",2],["Route::convertValidateToBefore","Niysu\\Route","Niysu\/Route.html#method_convertValidateToBefore","(mixed $validate, integer $statusCode)","Converts a \"validate\"-type function to a \"before\"-type",2],["Route::convertFilterToBefore","Niysu\\Route","Niysu\/Route.html#method_convertFilterToBefore","(mixed $filter)","Builds a \"before\"-type function that will invoke a",2],["RoutesCollection::parseClass","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_parseClass","(string $className)","Parses a class and registers all resources defined",2],["RoutesCollection::register","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_register","(string $url = null, string $method = &#039;.*&#039;, <abbr title=\"Niysu\\callable\">callable<\/abbr> $callback = null)","Creates a new route in this collection.",2],["RoutesCollection::registerStaticDirectory","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_registerStaticDirectory","($path)","Registers all the files of a static directory as resources.",2],["RoutesCollection::redirect","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_redirect","($url, $method, $target, $statusCode = 301)","",2],["RoutesCollection::__construct","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method___construct","($prefix = &#039;&#039;)","",2],["RoutesCollection::prefix","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_prefix","(string $prefix)","Sets the prefix to add to all routes in this collection.",2],["RoutesCollection::getLocalPrefix","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_getLocalPrefix","()","Returns the local prefix that was defined on construction",2],["RoutesCollection::getFullPrefix","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_getFullPrefix","()","Returns the full prefix, ie.",2],["RoutesCollection::before","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_before","(<abbr title=\"Niysu\\callable\">callable<\/abbr> $f)","Adds a before function to all routes in this collection.",2],["RoutesCollection::getRoutesList","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_getRoutesList","()","Returns a list of all routes from this collection.",2],["RoutesCollection::newChild","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_newChild","($prefix = &#039;&#039;)","Builds a new child and returns it.",2],["RoutesCollection::handle","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_handle","(<a href=\"Niysu\/HTTPRequestInterface.html\"><abbr title=\"Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr><\/a> $request, <a href=\"Niysu\/HTTPResponseInterface.html\"><abbr title=\"Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr><\/a> $response, <a href=\"Niysu\/Scope.html\"><abbr title=\"Niysu\\Scope\">Scope<\/abbr><\/a> $scope = null)","Tries to handle an HTTP request through a route of",2],["RoutesCollection::getRouteByName","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_getRouteByName","(string $name)","Search for a route with this name in this collection",2],["RoutesCollection::getBeforeFunctions","Niysu\\RoutesCollection","Niysu\/RoutesCollection.html#method_getBeforeFunctions","()","Returns the list of all before handlers that have been",2],["Scope::__get","Niysu\\Scope","Niysu\/Scope.html#method___get","(string $var)","Alias for get()",2],["Scope::__set","Niysu\\Scope","Niysu\/Scope.html#method___set","(string $var, mixed $value)","Alias for set()",2],["Scope::__unset","Niysu\\Scope","Niysu\/Scope.html#method___unset","(string $var)","Alias for set($var, null)",2],["Scope::__isset","Niysu\\Scope","Niysu\/Scope.html#method___isset","(string $var)","Alias for has()",2],["Scope::has","Niysu\\Scope","Niysu\/Scope.html#method_has","(string $var)","Checks whether a variable exists.",2],["Scope::get","Niysu\\Scope","Niysu\/Scope.html#method_get","(string $var)","Returns the value of a variable.",2],["Scope::getByRef","Niysu\\Scope","Niysu\/Scope.html#method_getByRef","(string $var)","Returns a reference to a variable.",2],["Scope::getByType","Niysu\\Scope","Niysu\/Scope.html#method_getByType","($requestedType)","",2],["Scope::getByTypeByRef","Niysu\\Scope","Niysu\/Scope.html#method_getByTypeByRef","($requestedType)","",2],["Scope::set","Niysu\\Scope","Niysu\/Scope.html#method_set","(string $var, mixed $value, string $type = null)","Changes the value of a variable.",2],["Scope::callback","Niysu\\Scope","Niysu\/Scope.html#method_callback","(string $var, <abbr title=\"Niysu\\callable\">callable<\/abbr> $callback, string $type = null)","Register a callback to be called when retreiving the",2],["Scope::passByRef","Niysu\\Scope","Niysu\/Scope.html#method_passByRef","(string $var, boolean $byRef = true)","Sets whether a variable can be accessed by reference.",2],["Scope::call","Niysu\\Scope","Niysu\/Scope.html#method_call","(mixed $function)","Calls the given function.",2],["Scope::newChild","Niysu\\Scope","Niysu\/Scope.html#method_newChild","()","Creates a new scope child of this one.",2],["Scope::newSmallChild","Niysu\\Scope","Niysu\/Scope.html#method_newSmallChild","()","Creates a new scope child of this one.",2],["Scope::serialize","Niysu\\Scope","Niysu\/Scope.html#method_serialize","()","",2],["Scope::unserialize","Niysu\\Scope","Niysu\/Scope.html#method_unserialize","($serialized)","",2],["Scope::__construct","Niysu\\Scope","Niysu\/Scope.html#method___construct","($variables = array())","Initializes the scope with variables.",2],["Scope::__clone","Niysu\\Scope","Niysu\/Scope.html#method___clone","()","",2],["Server::__construct","Niysu\\Server","Niysu\/Server.html#method___construct","(mixed $environment = null)","Initializes the server with the given configuration",2],["Server::getServiceProvider","Niysu\\Server","Niysu\/Server.html#method_getServiceProvider","(string $serviceName)","Returns the object previously registered by setServiceProvider",2],["Server::setServiceProvider","Niysu\\Server","Niysu\/Server.html#method_setServiceProvider","(string $serviceName, mixed $provider)","Registers a service.",2],["Server::getService","Niysu\\Server","Niysu\/Server.html#method_getService","(string $serviceName)","Builds a new instance of a service.",2],["Server::setFilterProvider","Niysu\\Server","Niysu\/Server.html#method_setFilterProvider","(string $filterName, mixed $provider)","Registers a filter.",2],["Server::register","Niysu\\Server","Niysu\/Server.html#method_register","(string $url = null, string $method = &#039;.*&#039;, <abbr title=\"Niysu\\callable\">callable<\/abbr> $callback = null)","Creates a new route in the main collection.",2],["Server::registerStaticDirectory","Niysu\\Server","Niysu\/Server.html#method_registerStaticDirectory","($path)","Registers all the files of a static directory as resources.",2],["Server::redirect","Niysu\\Server","Niysu\/Server.html#method_redirect","(string $url, string $method, string $target, <abbr title=\"Niysu\\number\">number<\/abbr> $statusCode = 301)","Registers an URL that will redirect to another when",2],["Server::before","Niysu\\Server","Niysu\/Server.html#method_before","($callable)","",2],["Server::buildCollection","Niysu\\Server","Niysu\/Server.html#method_buildCollection","($prefix = &#039;&#039;)","",2],["Server::handle","Niysu\\Server","Niysu\/Server.html#method_handle","(<a href=\"Niysu\/HTTPRequestInterface.html\"><abbr title=\"Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr><\/a> $input = null, <a href=\"Niysu\/HTTPResponseInterface.html\"><abbr title=\"Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr><\/a> $output = null)","Handles the request described in $input.",2],["Server::generateQueryScope","Niysu\\Server","Niysu\/Server.html#method_generateQueryScope","()","Generates a Scope that contains the variables provided",2],["Server::getRoutesList","Niysu\\Server","Niysu\/Server.html#method_getRoutesList","()","Returns the list of all registered routes",2],["Server::parseClass","Niysu\\Server","Niysu\/Server.html#method_parseClass","(string $className, string $prefix = &#039;&#039;)","Parses a class and registers all resources defined",2],["Server::getRouteByName","Niysu\\Server","Niysu\/Server.html#method_getRouteByName","(string $name)","Search for a route with this name in the main collection",2],["CacheService::setCacheDirectory","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_setCacheDirectory","($directory)","",2],["CacheService::setCompressionLevel","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_setCompressionLevel","($level)","",2],["CacheService::activate","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_activate","()","",2],["CacheService::deactivate","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_deactivate","()","",2],["CacheService::exists","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_exists","($key)","",2],["CacheService::store","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_store","($key, $data, $ttl = null)","",2],["CacheService::load","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_load","($key)","",2],["CacheService::clear","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_clear","($key)","",2],["CacheService::clearAll","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method_clearAll","()","",2],["CacheService::__construct","Niysu\\Services\\CacheService","Niysu\/Services\/CacheService.html#method___construct","($log)","",2],["CookiesService::__construct","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method___construct","(<abbr title=\"Niysu\\Services\\Niysu\\HTTPRequestInterface\">HTTPRequestInterface<\/abbr> $request, <abbr title=\"Niysu\\Services\\Niysu\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response, <abbr title=\"Niysu\\Services\\Monolog\\Logger\">Logger<\/abbr> $log)","",2],["CookiesService::setDefaultLifetime","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method_setDefaultLifetime","(mixed $ttl)","Sets the default lifetime of a cookie if not set.",2],["CookiesService::__get","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method___get","(string $varName)","Alias of get()",2],["CookiesService::__set","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method___set","(string $varName, string $value)","Alias of add()",2],["CookiesService::__unset","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method___unset","(string $varName)","Alias of destroy()",2],["CookiesService::__isset","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method___isset","(string $varName)","Returns true if this cookie exists in the request or",2],["CookiesService::getCookiesList","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method_getCookiesList","()","Returns the list of cookies.",2],["CookiesService::get","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method_get","($cookieName)","Reads a cookie.",2],["CookiesService::destroy","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method_destroy","(string $cookieName)","Destroys a cookie.",2],["CookiesService::add","Niysu\\Services\\CookiesService","Niysu\/Services\/CookiesService.html#method_add","(string $name, string $value, mixed $expires = null, string $path = null, string $domain = null, boolean $secure = false, boolean $httponly = false)","Sets the value of a cookie.",2],["DatabaseProfilingService::signalConnection","Niysu\\Services\\DatabaseProfilingService","Niysu\/Services\/DatabaseProfilingService.html#method_signalConnection","($dsn, $timer)","",2],["DatabaseProfilingService::signalQuery","Niysu\\Services\\DatabaseProfilingService","Niysu\/Services\/DatabaseProfilingService.html#method_signalQuery","($sql, $dsn, $timer)","",2],["DatabaseProfilingService::getNumberOfQueries","Niysu\\Services\\DatabaseProfilingService","Niysu\/Services\/DatabaseProfilingService.html#method_getNumberOfQueries","()","",2],["DatabaseProfilingService::getQueriesTotalMilliseconds","Niysu\\Services\\DatabaseProfilingService","Niysu\/Services\/DatabaseProfilingService.html#method_getQueriesTotalMilliseconds","()","",2],["DatabaseProfilingService::getTotalConnectionMilliseconds","Niysu\\Services\\DatabaseProfilingService","Niysu\/Services\/DatabaseProfilingService.html#method_getTotalConnectionMilliseconds","()","",2],["DatabaseProfilingService::getQueriesList","Niysu\\Services\\DatabaseProfilingService","Niysu\/Services\/DatabaseProfilingService.html#method_getQueriesList","()","",2],["DatabaseService::beforeConfigureDatabase","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_beforeConfigureDatabase","($dsn, $login = null, $password = null)","",2],["DatabaseService::beginTransaction","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_beginTransaction","()","",2],["DatabaseService::commit","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_commit","()","",2],["DatabaseService::rollBack","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_rollBack","()","",2],["DatabaseService::openQuery","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_openQuery","($sql, $params = array())","Opens a query and executes it.",2],["DatabaseService::query","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_query","($sql, $params = array())","Opens a query with results, executes it, and returns",2],["DatabaseService::querySingle","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_querySingle","($sql, $params = array())","Opens a query with results, executes it, and returns",2],["DatabaseService::execute","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_execute","($sql, $params = array())","Opens a query without results and executes it.",2],["DatabaseService::getLastInsertID","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_getLastInsertID","($sequenceName = null)","",2],["DatabaseService::__construct","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method___construct","($logService = null, $databaseProfilingService = null)","",2],["DatabaseService::setDatabase","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method_setDatabase","(string $database, string $username = null, string $password = null)","Configures the database to use.",2],["DatabaseService::__get","Niysu\\Services\\DatabaseService","Niysu\/Services\/DatabaseService.html#method___get","($tableName)","",2],["DatabaseServiceTable::OrderBy","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_OrderBy","($param)","",2],["DatabaseServiceTable::__construct","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method___construct","(<a href=\"Niysu\/Services\/DatabaseService.html\"><abbr title=\"Niysu\\Services\\DatabaseService\">DatabaseService<\/abbr><\/a> $service, $tableName, $colNameDelimiter = &#039;&quot;&#039;)","",2],["DatabaseServiceTable::__get","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method___get","($colName)","",2],["DatabaseServiceTable::__unset","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method___unset","($varName)","",2],["DatabaseServiceTable::__set","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method___set","($varName, $value)","",2],["DatabaseServiceTable::current","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_current","()","",2],["DatabaseServiceTable::key","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_key","()","",2],["DatabaseServiceTable::next","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_next","()","",2],["DatabaseServiceTable::rewind","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_rewind","()","",2],["DatabaseServiceTable::valid","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_valid","()","",2],["DatabaseServiceTable::offsetExists","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_offsetExists","($offset)","",2],["DatabaseServiceTable::offsetGet","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_offsetGet","($offset)","",2],["DatabaseServiceTable::offsetSet","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_offsetSet","($offset, $value)","",2],["DatabaseServiceTable::offsetUnset","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_offsetUnset","($offset)","",2],["DatabaseServiceTable::count","Niysu\\Services\\DatabaseServiceTable","Niysu\/Services\/DatabaseServiceTable.html#method_count","()","",2],["FormValidationService::validate","Niysu\\Services\\FormValidationService","Niysu\/Services\/FormValidationService.html#method_validate","(array $inputData, array $format)","Validates the input data.",2],["FormValidationService::generateFormatFromHTML","Niysu\\Services\\FormValidationService","Niysu\/Services\/FormValidationService.html#method_generateFormatFromHTML","(string $html)","Generates an array of format arrays from HTML.",2],["FormValidationService::setCacheDirectory","Niysu\\Services\\FormValidationService","Niysu\/Services\/FormValidationService.html#method_setCacheDirectory","(string $dir)","Sets the cache directory to store form formats.",2],["FormValidationService::storeFormat","Niysu\\Services\\FormValidationService","Niysu\/Services\/FormValidationService.html#method_storeFormat","($destPageName, $format, $ttl = 31536000)","",2],["FormValidationService::loadFormat","Niysu\\Services\\FormValidationService","Niysu\/Services\/FormValidationService.html#method_loadFormat","($destPageName)","",2],["HTTPBasicAuthService::beforeMustBeAuthenticated","Niysu\\Services\\HTTPBasicAuthService","Niysu\/Services\/HTTPBasicAuthService.html#method_beforeMustBeAuthenticated","($realm = &#039;private&#039;)","",2],["HTTPBasicAuthService::__construct","Niysu\\Services\\HTTPBasicAuthService","Niysu\/Services\/HTTPBasicAuthService.html#method___construct","($request, $logService, $scope)","",2],["HTTPBasicAuthService::setAuthFunction","Niysu\\Services\\HTTPBasicAuthService","Niysu\/Services\/HTTPBasicAuthService.html#method_setAuthFunction","($callable)","",2],["HTTPBasicAuthService::login","Niysu\\Services\\HTTPBasicAuthService","Niysu\/Services\/HTTPBasicAuthService.html#method_login","()","",2],["MaintenanceModeService::beforeCheckMaintenance","Niysu\\Services\\MaintenanceModeService","Niysu\/Services\/MaintenanceModeService.html#method_beforeCheckMaintenance","(string $file = null)","Returns a before function that stops the route and",2],["MaintenanceModeService::setFile","Niysu\\Services\\MaintenanceModeService","Niysu\/Services\/MaintenanceModeService.html#method_setFile","(string $file)","Configures the file that will be checked.",2],["MaintenanceModeService::isMaintenanceMode","Niysu\\Services\\MaintenanceModeService","Niysu\/Services\/MaintenanceModeService.html#method_isMaintenanceMode","()","Returns true if the previously configured maintenance",2],["MaintenanceModeService::setMaintenanceMode","Niysu\\Services\\MaintenanceModeService","Niysu\/Services\/MaintenanceModeService.html#method_setMaintenanceMode","()","Creates the previously configured maintenance file,",2],["MaintenanceModeService::clearMaintenanceMode","Niysu\\Services\\MaintenanceModeService","Niysu\/Services\/MaintenanceModeService.html#method_clearMaintenanceMode","()","Deletes the previously configured maintenance file,",2],["ResourcesCacheService::setCacheDirectory","Niysu\\Services\\ResourcesCacheService","Niysu\/Services\/ResourcesCacheService.html#method_setCacheDirectory","($directory)","Sets the directory that this service will use to store",2],["ResourcesCacheService::store","Niysu\\Services\\ResourcesCacheService","Niysu\/Services\/ResourcesCacheService.html#method_store","(string $url, string $data, array $varyHeaders = array(), integer $ttl = null)","Sets the content of the cache for this resource.",2],["ResourcesCacheService::load","Niysu\\Services\\ResourcesCacheService","Niysu\/Services\/ResourcesCacheService.html#method_load","(string $url, array $requestHeaders = array())","Returns the content of the cache for this resource.",2],["ResourcesCacheService::clear","Niysu\\Services\\ResourcesCacheService","Niysu\/Services\/ResourcesCacheService.html#method_clear","(string $url)","Clears all entries with a specific wildcard.",2],["ResourcesCacheService::clearAll","Niysu\\Services\\ResourcesCacheService","Niysu\/Services\/ResourcesCacheService.html#method_clearAll","()","Clears all entries created by this service.",2],["ResourcesCacheService::__construct","Niysu\\Services\\ResourcesCacheService","Niysu\/Services\/ResourcesCacheService.html#method___construct","(<abbr title=\"Niysu\\Services\\Monolog\\Logger\">Logger<\/abbr> $log = null)","Constructor.",2],["SessionAuthService::beforeMustBeAuthenticated","Niysu\\Services\\SessionAuthService","Niysu\/Services\/SessionAuthService.html#method_beforeMustBeAuthenticated","($loginFormURL)","",2],["SessionAuthService::__construct","Niysu\\Services\\SessionAuthService","Niysu\/Services\/SessionAuthService.html#method___construct","($sessionService)","",2],["SessionAuthService::login","Niysu\\Services\\SessionAuthService","Niysu\/Services\/SessionAuthService.html#method_login","()","",2],["SessionService::beforeSetToCacheFilesStorage","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method_beforeSetToCacheFilesStorage","()","",2],["SessionService::setToCacheFilesStorage","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method_setToCacheFilesStorage","()","",2],["SessionService::__isset","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method___isset","($var)","",2],["SessionService::__unset","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method___unset","($var)","",2],["SessionService::__get","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method___get","($var)","",2],["SessionService::__set","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method___set","($var, $value)","",2],["SessionService::__construct","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method___construct","($scope)","",2],["SessionService::__destruct","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method___destruct","()","",2],["SessionService::getID","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method_getID","()","",2],["SessionService::getVariables","Niysu\\Services\\SessionService","Niysu\/Services\/SessionService.html#method_getVariables","()","",2],["TwigService::__construct","Niysu\\Services\\TwigService","Niysu\/Services\/TwigService.html#method___construct","($response)","",2],["TwigService::setCachePath","Niysu\\Services\\TwigService","Niysu\/Services\/TwigService.html#method_setCachePath","($directory)","",2],["TwigService::addPath","Niysu\\Services\\TwigService","Niysu\/Services\/TwigService.html#method_addPath","($templateDir, $namespace = null)","",2],["TwigService::prependPath","Niysu\\Services\\TwigService","Niysu\/Services\/TwigService.html#method_prependPath","($templateDir, $namespace = null)","",2],["TwigService::addGlobal","Niysu\\Services\\TwigService","Niysu\/Services\/TwigService.html#method_addGlobal","($variable, $value)","",2],["TwigService::render","Niysu\\Services\\TwigService","Niysu\/Services\/TwigService.html#method_render","($template, $variables = array())","",2],["TwigService::output","Niysu\\Services\\TwigService","Niysu\/Services\/TwigService.html#method_output","($template, $variables = array())","",2],["XSLTService::__construct","Niysu\\Services\\XSLTService","Niysu\/Services\/XSLTService.html#method___construct","($response, $outputXMLService)","",2],["XSLTService::transform","Niysu\\Services\\XSLTService","Niysu\/Services\/XSLTService.html#method_transform","(string $template, mixed $xml)","Transforms XML using XSLT.",2],["XSLTService::output","Niysu\\Services\\XSLTService","Niysu\/Services\/XSLTService.html#method_output","(string $template, mixed $xml, <abbr title=\"Niysu\\Services\\HTTPResponseInterface\">HTTPResponseInterface<\/abbr> $response = null)","Transforms XML using XSLT and writes it to the response.",2],["URLPattern::__construct","Niysu\\URLPattern","Niysu\/URLPattern.html#method___construct","(string $pattern)","",2],["URLPattern::testURL","Niysu\\URLPattern","Niysu\/URLPattern.html#method_testURL","(string $url)","Checks whether the URL matches the pattern.",2],["URLPattern::pattern","Niysu\\URLPattern","Niysu\/URLPattern.html#method_pattern","(string $varName, string $regex)","Changes the pattern of a variable.",2],["URLPattern::getOriginalPattern","Niysu\\URLPattern","Niysu\/URLPattern.html#method_getOriginalPattern","()","Returns the original pattern.",2],["URLPattern::getURLRegex","Niysu\\URLPattern","Niysu\/URLPattern.html#method_getURLRegex","()","Returns the regular expression to match with an URL.",2],["URLPattern::getURL","Niysu\\URLPattern","Niysu\/URLPattern.html#method_getURL","(array $parameters = array())","Returns the URL of the route.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']